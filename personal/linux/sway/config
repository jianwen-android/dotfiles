### Variables

# Style
default_border pixel 2
titlebar_border_thickness 2
gaps outer 5
gaps inner 5

## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #7aa2f7 #414868 #c0caf5 #7dcfff   #7aa2f7
client.focused_inactive #7aa2f7 #414868 #c0caf5 #7dcfff   #7aa2f7
client.unfocused        #414868 #24283b #a9b1d6 #7dcfff   #414868
client.urgent           #e0af68 #e0af68 #1d202f #7dcfff   #e0af68

# Window rules
for_window [workspace="1"] layout tabbed
for_window [workspace="4"] layout tabbed
for_window [workspace="5"] layout tabbed
for_window [app_id="ncmpcpp"] floating enable, resize set height 500 px, resize set width 1000 px, move position 5 10
for_window [app_id="cava"] floating enable, resize set height 500 px, resize set width 1000px, move position 895 520
for_window [app_id="veracrypt"] floating enable

for_window [title="^Picture-in-Picture$"] floating enable, resize set height 400px, resize set width 800px, move position 1120 580, sticky enable, border none
#TODO find the good position
for_window [title="^JetBrains Toolbox$"] floating enable, border csd
for_window [title="^Bitwarden$"] floating enable
for_window [title="^4K Video Downloader"] floating enable
for_window [title="Properties$"] floating enable
#for_window [title="(\w|\s)* (A|a)ndroid (\w)*"] floating enable
# TODO regex
for_window [title="^ImageMagick"] floating enable

assign [app_id="msg"] workspace 1

exec whatsdesk --class msg -r nvim ~/.config/sway/config
exec discord --class msg -r nvim ~/.config/sway/config

assign [app_id="web"] workspace 2

exec firefox --class web -r nvim ~/.config/sway/config

# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1

# Homerow nav keys
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term hyper

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/user/3122955.png fill
output VGA-1 resolution 1920x1090 position 1920,0

### Idle configuration
exec swayidle -w \
	timeout 1800 'swaylock' \
	timeout 1805 'swaymsg "output * dpms off"' \
	resume 'swaymsg "output * dpms on"'
# This will lock your screen after 1800 seconds of inactivity, then turn off
# your displays after another 1805 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Start clipman with sway
exec wl-paste -t text --watch clipman store

### Input configuration
input type:pointer {
    natural_scroll enabled
    accel_profile flat
    pointer_accel -0.3
}
# input * xkb_capslock enable
input * xkb_numlock enable


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

set $nag exec swaynagmode
mode "nag" {
  bindsym {
    Ctrl+d    mode "default"

    Ctrl+c    $nag --exit
    q         $nag --exit
    Escape    $nag --exit

    Return    $nag --confirm

    Tab       $nag --select prev
    Shift+Tab $nag --select next

    Left      $nag --select next
    Right     $nag --select prev

    Up        $nag --select next
    Down      $nag --select prev
  }
}

### Key bindings
#
# Basics:
#
    # Screenshot with grim and swappy
    bindsym print exec ~/.config/rofi/bin/applet_screenshot

    # Show clipboard history
    bindsym $mod+v exec clipman pick -t rofi
    
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+space exec ~/.config/rofi/bin/launcher_colorful

    # File finder
    #TODO bindsym $alt+space exec sudo rofi -show find -modi find:~/.config/rofi/finder.sh

    # Powermenu
    bindsym $mod+Escape exec ~/.config/rofi/bin/powermenu

    # Draggging and resizing modifier
    # Works for both tiled and floating windows
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c exec swaymsg reload && $nag -t nord -m 'Config reloaded!'
#

# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Tab workspace next
    bindsym $mod+shift+Tab workspace prev
    bindsym $mod+Ctrl+left workspace prev
    bindsym $mod+Ctrl+right workspace next
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+w layout toggle stacking tabbed split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $alt+shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    #TODO i only use this for hyper...

    exec_always {
        "scratchpad"
        hyper move scratchpad
    }

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Swayr:
exec env RUST_BACKTRACE=1 swayrd > /tmp/swayrd.log 2>&1
    bindsym $alt+Tab     exec env RUST_BACKTRACE=1 \
        swayr switch-window >> /tmp/swayr.log 2>&1

    bindsym $mod+Delete exec env RUST_BACKTRACE=1 \
        swayr quit-window > /tmp/swayr.log 2>&1

    bindsym $mod+$alt exec envb RUST_BACKTRACE=1 \
        swayr switch-to-urgent-or-lru-window >> /tmp/swayr.log 2>&1

    bindsym $mod+Next exec env RUST_BACKTRACE=1 \
        swayr next-window >> /tmp/swayr.log 2>&2

    bindsym $mod+Prior exec env RUST_BACKTRACE=1 \
        swayr prev-window >> /tmp/swayr.log 2>&2

    ##bindsym $mod+Shift+Space exec env RUST_BACKTRACE=1 \
    ##    swayr switch-workspace-or-window >> /tmp/swayr.log 2>&1

    #bindsym $mod+c exec env RUST_BACKTRACE=1 \
    #    swayr execute-swaymsg-command >> /tmp/swayr.log 2>&1

    #bindsym $mod+Shift+c exec env RUST_BACKTRACE=1 \
    #    swayr execute-swayr-command >> /tmp/swayr.log 2>&1


# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize grow width 10px
    bindsym Down resize shrink height 10px
    bindsym Up resize grow height 10px
    bindsym Right resize shrink width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

## Toggle transperancy on focused window
# Keybind is #mod+ctrl+a
set $trans 0.8
set $alphamark "Î±"
for_window [con_mark=$alphamark] opacity set $trans
bindsym $mod+ctrl+a mark --toggle "$alphamark" ; [con_id=__focused__] opacity set 1 ; [con_mark=$alphamark con_id=__focused__] opacity set $trans

# Stick windows from all workspaces
bindsym $alt+Shift+Up sticky toggle


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

### Startup
exec_always xwayland enable
exec {
    rofi
    fcitx -d -r
    jetbrains
    mako
    $nag -t nord -m 'Restore session?' -b "Yes" "sway-session restore"
    sway-session save-loop 60
    onedrive --synchronize --skip-size 1000

    exec wl-paste -t text --watch clipman store
    exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json" 
    exec clipman restore

    # Enable WebRTC screensharing for Firefox etc..
    /usr/lib/xdg-desktop-portal --verbose -r && /usr/lib/xdg-desktop-portal-wlr

}
exec_always /usr/bin/light-lockers

for_window [title="^SM-N950F$"] floating enable, border pixel

bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*